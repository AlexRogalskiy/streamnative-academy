/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package sn.academy.food_delivery.models.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class GeoEncodedAddress extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3810603656006552980L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GeoEncodedAddress\",\"namespace\":\"sn.academy.food_delivery.models.avro\",\"fields\":[{\"name\":\"address\",\"type\":{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"street\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"zip\",\"type\":\"string\"}]}},{\"name\":\"isValidAddress\",\"type\":\"boolean\"},{\"name\":\"geoLocation\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"GeoLocation\",\"fields\":[{\"name\":\"latitude\",\"type\":\"double\"},{\"name\":\"longitude\",\"type\":\"double\"}]}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<GeoEncodedAddress> ENCODER =
      new BinaryMessageEncoder<GeoEncodedAddress>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<GeoEncodedAddress> DECODER =
      new BinaryMessageDecoder<GeoEncodedAddress>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<GeoEncodedAddress> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<GeoEncodedAddress> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<GeoEncodedAddress> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<GeoEncodedAddress>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this GeoEncodedAddress to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a GeoEncodedAddress from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a GeoEncodedAddress instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static GeoEncodedAddress fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public sn.academy.food_delivery.models.avro.Address address;
  @Deprecated public boolean isValidAddress;
  @Deprecated public sn.academy.food_delivery.models.avro.GeoLocation geoLocation;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GeoEncodedAddress() {}

  /**
   * All-args constructor.
   * @param address The new value for address
   * @param isValidAddress The new value for isValidAddress
   * @param geoLocation The new value for geoLocation
   */
  public GeoEncodedAddress(sn.academy.food_delivery.models.avro.Address address, java.lang.Boolean isValidAddress, sn.academy.food_delivery.models.avro.GeoLocation geoLocation) {
    this.address = address;
    this.isValidAddress = isValidAddress;
    this.geoLocation = geoLocation;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return address;
    case 1: return isValidAddress;
    case 2: return geoLocation;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: address = (sn.academy.food_delivery.models.avro.Address)value$; break;
    case 1: isValidAddress = (java.lang.Boolean)value$; break;
    case 2: geoLocation = (sn.academy.food_delivery.models.avro.GeoLocation)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public sn.academy.food_delivery.models.avro.Address getAddress() {
    return address;
  }


  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(sn.academy.food_delivery.models.avro.Address value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'isValidAddress' field.
   * @return The value of the 'isValidAddress' field.
   */
  public boolean getIsValidAddress() {
    return isValidAddress;
  }


  /**
   * Sets the value of the 'isValidAddress' field.
   * @param value the value to set.
   */
  public void setIsValidAddress(boolean value) {
    this.isValidAddress = value;
  }

  /**
   * Gets the value of the 'geoLocation' field.
   * @return The value of the 'geoLocation' field.
   */
  public sn.academy.food_delivery.models.avro.GeoLocation getGeoLocation() {
    return geoLocation;
  }


  /**
   * Sets the value of the 'geoLocation' field.
   * @param value the value to set.
   */
  public void setGeoLocation(sn.academy.food_delivery.models.avro.GeoLocation value) {
    this.geoLocation = value;
  }

  /**
   * Creates a new GeoEncodedAddress RecordBuilder.
   * @return A new GeoEncodedAddress RecordBuilder
   */
  public static sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder newBuilder() {
    return new sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder();
  }

  /**
   * Creates a new GeoEncodedAddress RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GeoEncodedAddress RecordBuilder
   */
  public static sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder newBuilder(sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder other) {
    if (other == null) {
      return new sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder();
    } else {
      return new sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder(other);
    }
  }

  /**
   * Creates a new GeoEncodedAddress RecordBuilder by copying an existing GeoEncodedAddress instance.
   * @param other The existing instance to copy.
   * @return A new GeoEncodedAddress RecordBuilder
   */
  public static sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder newBuilder(sn.academy.food_delivery.models.avro.GeoEncodedAddress other) {
    if (other == null) {
      return new sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder();
    } else {
      return new sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder(other);
    }
  }

  /**
   * RecordBuilder for GeoEncodedAddress instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GeoEncodedAddress>
    implements org.apache.avro.data.RecordBuilder<GeoEncodedAddress> {

    private sn.academy.food_delivery.models.avro.Address address;
    private sn.academy.food_delivery.models.avro.Address.Builder addressBuilder;
    private boolean isValidAddress;
    private sn.academy.food_delivery.models.avro.GeoLocation geoLocation;
    private sn.academy.food_delivery.models.avro.GeoLocation.Builder geoLocationBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.address)) {
        this.address = data().deepCopy(fields()[0].schema(), other.address);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasAddressBuilder()) {
        this.addressBuilder = sn.academy.food_delivery.models.avro.Address.newBuilder(other.getAddressBuilder());
      }
      if (isValidValue(fields()[1], other.isValidAddress)) {
        this.isValidAddress = data().deepCopy(fields()[1].schema(), other.isValidAddress);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.geoLocation)) {
        this.geoLocation = data().deepCopy(fields()[2].schema(), other.geoLocation);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasGeoLocationBuilder()) {
        this.geoLocationBuilder = sn.academy.food_delivery.models.avro.GeoLocation.newBuilder(other.getGeoLocationBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing GeoEncodedAddress instance
     * @param other The existing instance to copy.
     */
    private Builder(sn.academy.food_delivery.models.avro.GeoEncodedAddress other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.address)) {
        this.address = data().deepCopy(fields()[0].schema(), other.address);
        fieldSetFlags()[0] = true;
      }
      this.addressBuilder = null;
      if (isValidValue(fields()[1], other.isValidAddress)) {
        this.isValidAddress = data().deepCopy(fields()[1].schema(), other.isValidAddress);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.geoLocation)) {
        this.geoLocation = data().deepCopy(fields()[2].schema(), other.geoLocation);
        fieldSetFlags()[2] = true;
      }
      this.geoLocationBuilder = null;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public sn.academy.food_delivery.models.avro.Address getAddress() {
      return address;
    }


    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder setAddress(sn.academy.food_delivery.models.avro.Address value) {
      validate(fields()[0], value);
      this.addressBuilder = null;
      this.address = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'address' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public sn.academy.food_delivery.models.avro.Address.Builder getAddressBuilder() {
      if (addressBuilder == null) {
        if (hasAddress()) {
          setAddressBuilder(sn.academy.food_delivery.models.avro.Address.newBuilder(address));
        } else {
          setAddressBuilder(sn.academy.food_delivery.models.avro.Address.newBuilder());
        }
      }
      return addressBuilder;
    }

    /**
     * Sets the Builder instance for the 'address' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder setAddressBuilder(sn.academy.food_delivery.models.avro.Address.Builder value) {
      clearAddress();
      addressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'address' field has an active Builder instance
     * @return True if the 'address' field has an active Builder instance
     */
    public boolean hasAddressBuilder() {
      return addressBuilder != null;
    }

    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder clearAddress() {
      address = null;
      addressBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'isValidAddress' field.
      * @return The value.
      */
    public boolean getIsValidAddress() {
      return isValidAddress;
    }


    /**
      * Sets the value of the 'isValidAddress' field.
      * @param value The value of 'isValidAddress'.
      * @return This builder.
      */
    public sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder setIsValidAddress(boolean value) {
      validate(fields()[1], value);
      this.isValidAddress = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'isValidAddress' field has been set.
      * @return True if the 'isValidAddress' field has been set, false otherwise.
      */
    public boolean hasIsValidAddress() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'isValidAddress' field.
      * @return This builder.
      */
    public sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder clearIsValidAddress() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'geoLocation' field.
      * @return The value.
      */
    public sn.academy.food_delivery.models.avro.GeoLocation getGeoLocation() {
      return geoLocation;
    }


    /**
      * Sets the value of the 'geoLocation' field.
      * @param value The value of 'geoLocation'.
      * @return This builder.
      */
    public sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder setGeoLocation(sn.academy.food_delivery.models.avro.GeoLocation value) {
      validate(fields()[2], value);
      this.geoLocationBuilder = null;
      this.geoLocation = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'geoLocation' field has been set.
      * @return True if the 'geoLocation' field has been set, false otherwise.
      */
    public boolean hasGeoLocation() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'geoLocation' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public sn.academy.food_delivery.models.avro.GeoLocation.Builder getGeoLocationBuilder() {
      if (geoLocationBuilder == null) {
        if (hasGeoLocation()) {
          setGeoLocationBuilder(sn.academy.food_delivery.models.avro.GeoLocation.newBuilder(geoLocation));
        } else {
          setGeoLocationBuilder(sn.academy.food_delivery.models.avro.GeoLocation.newBuilder());
        }
      }
      return geoLocationBuilder;
    }

    /**
     * Sets the Builder instance for the 'geoLocation' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder setGeoLocationBuilder(sn.academy.food_delivery.models.avro.GeoLocation.Builder value) {
      clearGeoLocation();
      geoLocationBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'geoLocation' field has an active Builder instance
     * @return True if the 'geoLocation' field has an active Builder instance
     */
    public boolean hasGeoLocationBuilder() {
      return geoLocationBuilder != null;
    }

    /**
      * Clears the value of the 'geoLocation' field.
      * @return This builder.
      */
    public sn.academy.food_delivery.models.avro.GeoEncodedAddress.Builder clearGeoLocation() {
      geoLocation = null;
      geoLocationBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public GeoEncodedAddress build() {
      try {
        GeoEncodedAddress record = new GeoEncodedAddress();
        if (addressBuilder != null) {
          try {
            record.address = this.addressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("address"));
            throw e;
          }
        } else {
          record.address = fieldSetFlags()[0] ? this.address : (sn.academy.food_delivery.models.avro.Address) defaultValue(fields()[0]);
        }
        record.isValidAddress = fieldSetFlags()[1] ? this.isValidAddress : (java.lang.Boolean) defaultValue(fields()[1]);
        if (geoLocationBuilder != null) {
          try {
            record.geoLocation = this.geoLocationBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("geoLocation"));
            throw e;
          }
        } else {
          record.geoLocation = fieldSetFlags()[2] ? this.geoLocation : (sn.academy.food_delivery.models.avro.GeoLocation) defaultValue(fields()[2]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<GeoEncodedAddress>
    WRITER$ = (org.apache.avro.io.DatumWriter<GeoEncodedAddress>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<GeoEncodedAddress>
    READER$ = (org.apache.avro.io.DatumReader<GeoEncodedAddress>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.address.customEncode(out);

    out.writeBoolean(this.isValidAddress);

    if (this.geoLocation == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.geoLocation.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.address == null) {
        this.address = new sn.academy.food_delivery.models.avro.Address();
      }
      this.address.customDecode(in);

      this.isValidAddress = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.geoLocation = null;
      } else {
        if (this.geoLocation == null) {
          this.geoLocation = new sn.academy.food_delivery.models.avro.GeoLocation();
        }
        this.geoLocation.customDecode(in);
      }

    } else {
      for (int i = 0; i < 3; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.address == null) {
            this.address = new sn.academy.food_delivery.models.avro.Address();
          }
          this.address.customDecode(in);
          break;

        case 1:
          this.isValidAddress = in.readBoolean();
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.geoLocation = null;
          } else {
            if (this.geoLocation == null) {
              this.geoLocation = new sn.academy.food_delivery.models.avro.GeoLocation();
            }
            this.geoLocation.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










